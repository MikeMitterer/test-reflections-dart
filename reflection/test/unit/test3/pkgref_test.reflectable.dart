// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:reflection_test_pkgref/anotherlib.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.ReflectionTestAnotherPackage(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Vehicle",
            r"reflection_test_pkgref.anotherlib.dart.Vehicle",
            519,
            0,
            const prefix0.ReflectionTestAnotherPackage(),
            const <int>[0, 1],
            const <int>[2, 3, 4, 5, 6],
            const <int>[],
            -1,
            {},
            {},
            {},
            0,
            0,
            const <int>[],
            const <Object>[prefix0.rpackagetest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"MotorBike",
            r"reflection_test_pkgref.anotherlib.dart.MotorBike",
            7,
            1,
            const prefix0.ReflectionTestAnotherPackage(),
            const <int>[7, 8],
            const <int>[2, 3, 4, 5, 6, 7],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix0.MotorBike() : null},
            0,
            1,
            const <int>[],
            const <Object>[prefix0.rpackagetest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Car",
            r"reflection_test_pkgref.anotherlib.dart.Car",
            7,
            2,
            const prefix0.ReflectionTestAnotherPackage(),
            const <int>[9, 10],
            const <int>[2, 3, 4, 5, 6, 9],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix0.Car() : null},
            0,
            2,
            const <int>[],
            const <Object>[prefix0.rpackagetest, prefix0.thisIsACar],
            null)
      ],
      <m.DeclarationMirror>[
        new r.MethodMirrorImpl(r"wheels", 131586, 0, -1, 3, 3, const <int>[],
            const prefix0.ReflectionTestAnotherPackage(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 64, 0, -1, 0, 0, const <int>[],
            const prefix0.ReflectionTestAnotherPackage(), const []),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, 4, 4, const <int>[0],
            const prefix0.ReflectionTestAnotherPackage(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[1],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            3,
            3,
            const <int>[],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            6,
            6,
            const <int>[],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"wheels",
            131074,
            1,
            -1,
            3,
            3,
            const <int>[],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 1, -1, 1, 1, const <int>[],
            const prefix0.ReflectionTestAnotherPackage(), const []),
        new r.MethodMirrorImpl(
            r"wheels",
            131074,
            2,
            -1,
            3,
            3,
            const <int>[],
            const prefix0.ReflectionTestAnotherPackage(),
            const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 2, -1, 2, 2, const <int>[],
            const prefix0.ReflectionTestAnotherPackage(), const [])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            2,
            const prefix0.ReflectionTestAnotherPackage(),
            null,
            null,
            null,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            4,
            const prefix0.ReflectionTestAnotherPackage(),
            -1,
            7,
            7,
            const <Object>[],
            null,
            null)
      ],
      <Type>[
        prefix0.Vehicle,
        prefix0.MotorBike,
        prefix0.Car,
        int,
        bool,
        String,
        Type,
        Invocation
      ],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"wheels": (dynamic instance) => instance.wheels
      },
      {},
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(
            r"reflection_test_pkgref.anotherlib.dart",
            Uri.parse(
                r"reflectable://0/reflection_test_pkgref.anotherlib.dart"),
            const prefix0.ReflectionTestAnotherPackage(),
            const <int>[],
            {},
            {},
            const <Object>[],
            null)
      ],
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
