// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'main.dart' as prefix0;
import 'package:reflection_test_browser2/rlib.dart' as prefix2;
import 'package:reflection_test_pkgref/anotherlib.dart' as prefix1;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.ReflectionTestAnnotation(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Version",
            r".Version",
            7,
            0,
            const prefix0.ReflectionTestAnnotation(),
            const <int>[0, 1, 2, 3, 14, 15],
            const <int>[16, 17, 18, 19, 20, 8, 9, 10, 11, 12, 13, 14],
            const <int>[],
            -1,
            {},
            {},
            {
              r"": (b) =>
                  (major, minor) => b ? new prefix0.Version(major, minor) : null
            },
            0,
            0,
            const <int>[],
            const <Object>[
              prefix0.rtest,
              prefix0.myAnnotation,
              const prefix0.MyAnnotation(name: "Mike")
            ],
            null),
        new r.NonGenericClassMirrorImpl(
            r"DartLang",
            r".DartLang",
            7,
            1,
            const prefix0.ReflectionTestAnnotation(),
            const <int>[4, 5, 6, 7, 21, 26],
            const <int>[16, 17, 18, 19, 20, 21, 22, 23, 24, 25],
            const <int>[],
            -1,
            {},
            {},
            {
              r"": (b) => (name, version, message) =>
                  b ? new prefix0.DartLang(name, version, message) : null
            },
            0,
            1,
            const <int>[],
            const <Object>[prefix0.rtest],
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(
            r"major",
            33797,
            0,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            2,
            2, const <Object>[]),
        new r.VariableMirrorImpl(
            r"minor",
            33797,
            0,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            2,
            2, const <Object>[]),
        new r.VariableMirrorImpl(
            r"description",
            32773,
            0,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3, const <Object>[]),
        new r.VariableMirrorImpl(
            r"description2",
            32773,
            0,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3, const <Object>[]),
        new r.VariableMirrorImpl(
            r"name",
            33797,
            1,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3, const <Object>[]),
        new r.VariableMirrorImpl(
            r"version",
            33797,
            1,
            const prefix0.ReflectionTestAnnotation(),
            0,
            0,
            0, const <Object>[]),
        new r.VariableMirrorImpl(
            r"message",
            33797,
            1,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3, const <Object>[]),
        new r.VariableMirrorImpl(
            r"names",
            2130949,
            1,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            4,
            5, const <Object>[]),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 0, 2, 2, 8),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 1, 2, 2, 9),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 2, 3, 3, 10),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 2, 3, 3, 11),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 3, 3, 3, 12),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 3, 3, 3, 13),
        new r.MethodMirrorImpl(r"version", 131075, 0, -1, 3, 3, const <int>[],
            const prefix0.ReflectionTestAnnotation(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 0, 0, -1, 0, 0, const <int>[0, 1],
            const prefix0.ReflectionTestAnnotation(), const <Object>[]),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, 6, 6, const <int>[4],
            const prefix0.ReflectionTestAnnotation(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            3,
            3,
            const <int>[],
            const prefix0.ReflectionTestAnnotation(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[5],
            const prefix0.ReflectionTestAnnotation(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            2,
            2,
            const <int>[],
            const prefix0.ReflectionTestAnnotation(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            7,
            7,
            const <int>[],
            const prefix0.ReflectionTestAnnotation(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"getNameByIndex",
            131074,
            1,
            -1,
            3,
            3,
            const <int>[6],
            const prefix0.ReflectionTestAnnotation(),
            const <Object>[]),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 4, 3, 3, 22),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 5, 0, 0, 23),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 6, 3, 3, 24),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ReflectionTestAnnotation(), 7, 4, 5, 25),
        new r.MethodMirrorImpl(r"", 0, 1, -1, 1, 1, const <int>[7, 8, 9],
            const prefix0.ReflectionTestAnnotation(), const <Object>[])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"major",
            32774,
            15,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            2,
            2,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"minor",
            32774,
            15,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            2,
            2,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_description",
            32870,
            11,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3,
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_description2",
            32870,
            13,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3,
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            16,
            const prefix0.ReflectionTestAnnotation(),
            null,
            null,
            null,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            18,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            8,
            8,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"index",
            33798,
            21,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            2,
            2,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"name",
            32774,
            26,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"version",
            32774,
            26,
            const prefix0.ReflectionTestAnnotation(),
            0,
            0,
            0,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"message",
            32774,
            26,
            const prefix0.ReflectionTestAnnotation(),
            -1,
            3,
            3,
            const <Object>[],
            null,
            null)
      ],
      <Type>[
        prefix0.Version,
        prefix0.DartLang,
        int,
        String,
        const m.TypeValue<List<String>>().type,
        List,
        bool,
        Type,
        Invocation
      ],
      2,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"major": (dynamic instance) => instance.major,
        r"minor": (dynamic instance) => instance.minor,
        r"description": (dynamic instance) => instance.description,
        r"description2": (dynamic instance) => instance.description2,
        r"version": (dynamic instance) => instance.version,
        r"getNameByIndex": (dynamic instance) => instance.getNameByIndex,
        r"name": (dynamic instance) => instance.name,
        r"message": (dynamic instance) => instance.message,
        r"names": (dynamic instance) => instance.names
      },
      {
        r"description=": (dynamic instance, value) =>
            instance.description = value,
        r"description2=": (dynamic instance, value) =>
            instance.description2 = value
      },
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(
            r"",
            Uri.parse(r"reflectable://0/"),
            const prefix0.ReflectionTestAnnotation(),
            const <int>[],
            {},
            {},
            const [],
            null)
      ],
      []),
  const prefix1.ReflectionTestAnotherPackage(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Vehicle",
            r"reflection_test_pkgref.anotherlib.dart.Vehicle",
            519,
            0,
            const prefix1.ReflectionTestAnotherPackage(),
            const <int>[0, 1],
            const <int>[2, 3, 4, 5, 6],
            const <int>[],
            -1,
            {},
            {},
            {},
            0,
            0,
            const <int>[],
            const <Object>[prefix1.rpackagetest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"MotorBike",
            r"reflection_test_pkgref.anotherlib.dart.MotorBike",
            7,
            1,
            const prefix1.ReflectionTestAnotherPackage(),
            const <int>[7, 8],
            const <int>[2, 3, 4, 5, 6, 7],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.MotorBike() : null},
            0,
            1,
            const <int>[],
            const <Object>[prefix1.rpackagetest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Car",
            r"reflection_test_pkgref.anotherlib.dart.Car",
            7,
            2,
            const prefix1.ReflectionTestAnotherPackage(),
            const <int>[9, 10],
            const <int>[2, 3, 4, 5, 6, 9],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.Car() : null},
            0,
            2,
            const <int>[],
            const <Object>[prefix1.rpackagetest, prefix1.thisIsACar],
            null)
      ],
      <m.DeclarationMirror>[
        new r.MethodMirrorImpl(r"wheels", 131586, 0, -1, 3, 3, const <int>[],
            const prefix1.ReflectionTestAnotherPackage(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 64, 0, -1, 0, 0, const <int>[],
            const prefix1.ReflectionTestAnotherPackage(), const []),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, 4, 4, const <int>[0],
            const prefix1.ReflectionTestAnotherPackage(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[1],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            3,
            3,
            const <int>[],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            6,
            6,
            const <int>[],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"wheels",
            131074,
            1,
            -1,
            3,
            3,
            const <int>[],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 1, -1, 1, 1, const <int>[],
            const prefix1.ReflectionTestAnotherPackage(), const []),
        new r.MethodMirrorImpl(
            r"wheels",
            131074,
            2,
            -1,
            3,
            3,
            const <int>[],
            const prefix1.ReflectionTestAnotherPackage(),
            const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 2, -1, 2, 2, const <int>[],
            const prefix1.ReflectionTestAnotherPackage(), const [])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            2,
            const prefix1.ReflectionTestAnotherPackage(),
            null,
            null,
            null,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            4,
            const prefix1.ReflectionTestAnotherPackage(),
            -1,
            7,
            7,
            const <Object>[],
            null,
            null)
      ],
      <Type>[
        prefix1.Vehicle,
        prefix1.MotorBike,
        prefix1.Car,
        int,
        bool,
        String,
        Type,
        Invocation
      ],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"wheels": (dynamic instance) => instance.wheels
      },
      {},
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(
            r"reflection_test_pkgref.anotherlib.dart",
            Uri.parse(
                r"reflectable://0/reflection_test_pkgref.anotherlib.dart"),
            const prefix1.ReflectionTestAnotherPackage(),
            const <int>[],
            {},
            {},
            const <Object>[],
            null)
      ],
      []),
  const prefix2.ReflectionTestInLib(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Animal",
            r"reflection_test_browser2.rlib.Animal",
            519,
            0,
            const prefix2.ReflectionTestInLib(),
            const <int>[0, 1, 2],
            const <int>[3, 4, 5, 6, 7],
            const <int>[],
            -1,
            {},
            {},
            {},
            0,
            0,
            const <int>[],
            const <Object>[prefix2.rlibtest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Dog",
            r"reflection_test_browser2.rlib.Dog",
            7,
            1,
            const prefix2.ReflectionTestInLib(),
            const <int>[8, 9, 10],
            const <int>[3, 4, 5, 6, 7, 8, 9],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix2.Dog() : null},
            0,
            1,
            const <int>[],
            const <Object>[prefix2.rlibtest],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Cat",
            r"reflection_test_browser2.rlib.Cat",
            7,
            2,
            const prefix2.ReflectionTestInLib(),
            const <int>[11, 12, 13],
            const <int>[3, 4, 5, 6, 7, 11, 12],
            const <int>[],
            0,
            {},
            {},
            {r"": (b) => () => b ? new prefix2.Cat() : null},
            0,
            2,
            const <int>[],
            const <Object>[prefix2.rlibtest],
            null)
      ],
      <m.DeclarationMirror>[
        new r.MethodMirrorImpl(r"makeNoise", 131586, 0, -1, 3, 3, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[]),
        new r.MethodMirrorImpl(r"nrOfLegs", 131587, 0, -1, 4, 4, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 64, 0, -1, 0, 0, const <int>[],
            const prefix2.ReflectionTestInLib(), const []),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, 5, 5, const <int>[0],
            const prefix2.ReflectionTestInLib(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            3,
            3,
            const <int>[],
            const prefix2.ReflectionTestInLib(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[1],
            const prefix2.ReflectionTestInLib(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            4,
            4,
            const <int>[],
            const prefix2.ReflectionTestInLib(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            6,
            6,
            const <int>[],
            const prefix2.ReflectionTestInLib(),
            const <Object>[]),
        new r.MethodMirrorImpl(r"makeNoise", 131074, 1, -1, 3, 3, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[override]),
        new r.MethodMirrorImpl(r"nrOfLegs", 131075, 1, -1, 4, 4, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 1, -1, 1, 1, const <int>[],
            const prefix2.ReflectionTestInLib(), const []),
        new r.MethodMirrorImpl(r"makeNoise", 131074, 2, -1, 3, 3, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[override]),
        new r.MethodMirrorImpl(r"nrOfLegs", 131075, 2, -1, 4, 4, const <int>[],
            const prefix2.ReflectionTestInLib(), const <Object>[override]),
        new r.MethodMirrorImpl(r"", 64, 2, -1, 2, 2, const <int>[],
            const prefix2.ReflectionTestInLib(), const [])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            3,
            const prefix2.ReflectionTestInLib(),
            null,
            null,
            null,
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            5,
            const prefix2.ReflectionTestInLib(),
            -1,
            7,
            7,
            const <Object>[],
            null,
            null)
      ],
      <Type>[
        prefix2.Animal,
        prefix2.Dog,
        prefix2.Cat,
        String,
        int,
        bool,
        Type,
        Invocation
      ],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"makeNoise": (dynamic instance) => instance.makeNoise,
        r"nrOfLegs": (dynamic instance) => instance.nrOfLegs
      },
      {},
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(
            r"reflection_test_browser2.rlib",
            Uri.parse(r"reflectable://0/reflection_test_browser2.rlib"),
            const prefix2.ReflectionTestInLib(),
            const <int>[],
            {},
            {},
            const <Object>[],
            null)
      ],
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
